<<<<<<< HEAD
[{"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\header\\header.js":"3","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\body\\body.js":"4","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\Editor\\editor.js":"5","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\note\\note.js":"6","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\login\\login.js":"7","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\utils\\index.js":"8","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\server.js":"9"},{"size":506,"mtime":1610006273679,"results":"10","hashOfConfig":"11"},{"size":569,"mtime":1614753838258,"results":"12","hashOfConfig":"11"},{"size":280,"mtime":1614216360847,"results":"13","hashOfConfig":"11"},{"size":6122,"mtime":1615196466531,"results":"14","hashOfConfig":"11"},{"size":6213,"mtime":1615195683164,"results":"15","hashOfConfig":"11"},{"size":3082,"mtime":1615195795046,"results":"16","hashOfConfig":"11"},{"size":7454,"mtime":1614761592274,"results":"17","hashOfConfig":"11"},{"size":1265,"mtime":1614758945159,"results":"18","hashOfConfig":"11"},{"size":608,"mtime":1614568841501,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1uey2kl",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\index.js",[],["41","42"],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\header\\header.js",[],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\body\\body.js",["43","44","45","46","47","48","49","50","51"],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\Editor\\editor.js",["52","53","54","55","56"],"import React from 'react'\r\n// 引入编辑器组件\r\nimport BraftEditor from 'braft-editor'\r\n// 引入编辑器样式\r\nimport 'braft-editor/dist/index.css'\r\nimport './editor.css'\r\n// import 'braft-editor/dist/output.css'\r\nimport { message } from 'antd';\r\n\r\nlet titleStr = \"\", descriptionStr = \"\";\r\n// const defaultStr = `\r\n//     <p></p>\r\n//     <p class=\"title\">标题:${titleStr}</p><br>\r\n//     <p class=\"description\">描述:${descriptionStr}</p><br><hr>\r\n// `;\r\nconst defaultStr = \"\";\r\nexport default class Editor extends React.Component {\r\n\r\n\tstate = {\r\n\t\t// 创建一个空的editorState作为初始值\r\n\t\teditorState: BraftEditor.createEditorState(null),\r\n\t\ttitle: \"这是一个标题\",\r\n\t\tdescription: \"这是一段描述\",\r\n\t\teditItem: {id:\"\",content:\"\",title:\"\",decription:\"\"}\r\n\t}\r\n\r\n\t//后台请求数据\r\n\tfetchEditorContent = () => {\r\n\t\treturn defaultStr;\r\n\t}\r\n\t//向后台发送请求保存当前数据\r\n\tsaveEditorContent = () => {\r\n\t\treturn true\r\n\t}\r\n\t// static getDerivedStateFromProps(nextProps, prevState) {\r\n\t//     if(nextProps.editItem.id){\r\n\t//         var state = BraftEditor.createEditorState(defaultStr + nextProps.editItem.content);\r\n\t//         console.log(state)\r\n\r\n\t//         editorInstance && editorInstance.clearEditorContent();\r\n\t//         editorInstance && editorInstance.setValue(state);\r\n\t//         return {\r\n\t//             editItem: nextProps.editItem\r\n\t//         };\r\n\t//     }\r\n\t//     return null;\r\n\t// }\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.editItem.id) {\r\n\t\t\ttitleStr = nextProps.editItem.title;\r\n\t\t\tdescriptionStr = nextProps.editItem.title;\r\n\t\t\tthis.setState({\r\n\t\t\t\teditItem: nextProps.editItem,\r\n\t\t\t\teditorState: BraftEditor.createEditorState(defaultStr + nextProps.editItem.content)\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\teditItem: nextProps.editItem,\r\n\t\t\t\teditorState: BraftEditor.createEditorState(null)\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tasync componentDidMount() {\r\n\t\t// 假设此处从服务端获取html格式的编辑器内容\r\n\t\t// const htmlContent = await this.fetchEditorContent()\r\n\t\tconst htmlContent = this.props.editItem.content?this.props.editItem.content:\"\";\r\n\t\t// 使用BraftEditor.createEditorState将html字符串转换为编辑器需要的editorStat\r\n\t\tthis.setState({\r\n\t\t\teditorState: BraftEditor.createEditorState(defaultStr + htmlContent),\r\n\t\t\teditItem:this.props.editItem\r\n\t\t})\r\n\t}\r\n\r\n\tsubmitContent = async (isMenu) => {\r\n\t\t// 在编辑器获得焦点时按下ctrl+s会执行此方法\r\n\t\t// 编辑器内容提交到服务端之前，可直接调用editorState.toHTML()来获取HTML格式的内容\r\n\t\tmessage.success('保存成功！', 2)\r\n\t\tconst htmlContent = this.state.editorState.toHTML()\r\n\t\tconsole.log(htmlContent);\r\n\t\tthis.state.editItem.id\r\n\t\t\t? message.info('edit',2)\r\n\t\t\t:message.info('add',2)\r\n\t\t// const result = await saveEditorContent(htmlContent)\r\n\t\tif(isMenu){\r\n\t\t\tthis.props.save(true)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleEditorChange = (editorState) => {\r\n\t\tthis.setState({ editorState })\r\n\t}\r\n\t//由于图片上传、视频上传项目中都是单独走的接口，需要一个上传的方法\r\n\tmyUploadFn = (param) => {\r\n\t\tconsole.log('param', param);\r\n\t\tconst serverURL = `${window.sessionStorage.baseURL ? JSON.parse(window.sessionStorage.baseURL) : \"\"}/fileHandle/upload`//上传接口地址\r\n\t\tconst xhr = new XMLHttpRequest();\r\n\t\tconst fd = new FormData();\r\n\t\tif (param.file.type.indexOf(\"image\") != \"-1\" && (param.file.size / 1024 / 1024) > 9) {\r\n\t\t\tparam.error({\r\n\t\t\t\tmsg: '请上传小于10M的图片'\r\n\t\t\t})\r\n\t\t\tmessage.warning(\"请上传小于10M的图片\")\r\n\t\t}\r\n\t\tif (param.file.type.indexOf(\"video\") != \"-1\") {\r\n\t\t\tif (param.file.type.indexOf(\"mp4\") == \"-1\") {\r\n\t\t\t\tparam.error({\r\n\t\t\t\t\tmsg: '请上传mp4格式的视频'\r\n\t\t\t\t})\r\n\t\t\t\tmessage.warning(\"请上传mp4格式的视频\")\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif ((param.file.size / 1024 / 1024) > 100) {\r\n\t\t\t\tparam.error({\r\n\t\t\t\t\tmsg: '请上传小于100M的视频'\r\n\t\t\t\t})\r\n\t\t\t\tmessage.warning(\"请上传小于100M的视频\")\r\n\t\t\t}\r\n\t\t}\r\n\t\tconst successFn = (response) => {\r\n\t\t\t// 假设服务端直接返回文件上传后的地址\r\n\t\t\t// 上传成功后调用param.success并传入上传后的文件地址\r\n\t\t\tconst upLoadObject = JSON.parse(response && response.currentTarget && response.currentTarget.response);\r\n\t\t\t// console.log(\"JSON.parse(xhr.responseText).data\",JSON.parse(xhr.responseText).data)\r\n\t\t\tparam.success({\r\n\t\t\t\turl: `${window.sessionStorage.baseURL ? JSON.parse(window.sessionStorage.baseURL) + \"/fileHandle/video/preview?videoUrl=\" : \"\"}${JSON.parse(xhr.responseText).data}`,\r\n\t\t\t\tmeta: {\r\n\t\t\t\t\tid: upLoadObject && upLoadObject.id,\r\n\t\t\t\t\ttitle: upLoadObject && upLoadObject.fileName,\r\n\t\t\t\t\talt: upLoadObject && upLoadObject.fileName,\r\n\t\t\t\t\tloop: false, // 指定音视频是否循环播放\r\n\t\t\t\t\tautoPlay: true, // 指定音视频是否自动播放\r\n\t\t\t\t\tcontrols: true, // 指定音视频是否显示控制栏\r\n\t\t\t\t\tposter: '', // 指定视频播放器的封面\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tconst progressFn = (event) => {\r\n\t\t\t// 上传进度发生变化时调用param.progress\r\n\t\t\tparam.progress(event.loaded / event.total * 100)\r\n\r\n\t\t};\r\n\r\n\t\tconst errorFn = (response) => {\r\n\t\t\t// 上传发生错误时调用param.error\r\n\t\t\tparam.error({\r\n\t\t\t\tmsg: 'unable to upload.'\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\txhr.upload.addEventListener(\"progress\", progressFn, false);\r\n\t\txhr.addEventListener(\"load\", successFn, false);\r\n\t\txhr.addEventListener(\"error\", errorFn, false);\r\n\t\txhr.addEventListener(\"abort\", errorFn, false);\r\n\t\tfd.append('file', param.file);\r\n\t\txhr.open('POST', serverURL, true);\r\n\t\t//  xhr.setRequestHeader(\"X-Auth-Token\", User.getToken());//header中token的设置\r\n\t\txhr.send(fd)\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { editorState } = this.state;\r\n\t\tconst extendControls = [\r\n\t\t\t{\r\n\t\t\t\tkey: 'custom-button',\r\n\t\t\t\ttype: 'button',\r\n\t\t\t\ttext: '保存',\r\n\t\t\t\tonClick: this.submitContent.bind(this,true)\r\n\t\t\t}\r\n\t\t]\r\n\t\treturn (\r\n\t\t\t<div className=\"braft-output-content\">\r\n\t\t\t\t<BraftEditor\r\n\t\t\t\t\tplaceholder=\"请输入正文内容\"\r\n\t\t\t\t\tvalue={editorState}\r\n\t\t\t\t\tonChange={this.handleEditorChange}\r\n\t\t\t\t\tonSave={this.submitContent.bind(this,false)}\r\n\t\t\t\t\textendControls={extendControls}\r\n\t\t\t\t\t// media={{ uploadFn: this.myUploadFn }}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\r\n\t}\r\n\r\n}","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\note\\note.js",["57","58","59","60","61","62","63"],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\login\\login.js",["64"],"import React, { Component } from 'react';\r\n\r\nimport { Input, Button, Tooltip, message } from 'antd';\r\nimport utils from '../utils'\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport './login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    status: 'login',\r\n    registeruser: \"\",\r\n    registerpwd: \"\",\r\n    comfirmpwd: \"\",\r\n    loginuser: \"\",\r\n    loginpwd: \"\"\r\n  }\r\n\r\n  loginState = [0, 0]\r\n\r\n  registerState = [0, 0]\r\n\r\n  statusChage = (status) => {\r\n    this.setState({\r\n      status,\r\n      registeruser: \"\",\r\n      registerpwd: \"\",\r\n      comfirmpwd: \"\",\r\n      loginuser: \"\",\r\n      loginpwd: \"\",\r\n    })\r\n  }\r\n\r\n  userInput = (v, type) => {\r\n\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        this.setState({ registeruser: v.target.value })\r\n        break;\r\n      case \"registerpwd\":\r\n        this.setState({ registerpwd: v.target.value })\r\n        break;\r\n      case \"comfirmpwd\":\r\n        this.setState({ comfirmpwd: v.target.value })\r\n        break;\r\n      case \"loginuser\":\r\n        this.setState({ loginuser: v.target.value })\r\n        break;\r\n      case \"loginpwd\":\r\n        this.setState({ loginpwd: v.target.value })\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  userBlur = (v, type) => {\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"registerpwd\":\r\n        if (utils.passwordAvailable(v.target.value)) {\r\n\r\n        } else {\r\n          message.info('密码格式不正确')\r\n        }\r\n        break;\r\n      case \"comfirmpwd\":\r\n        if (this.state.registerpwd == v.target.value) {\r\n\r\n        } else {\r\n          message.info('确认密码保持一致')\r\n        }\r\n        break;\r\n      case \"loginuser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"loginpwd\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  userLogin = () => {\r\n    // if(utils.isPhoneOrEmail(this.state.loginuser)){\r\n    //   if(utils.passwordAvailable(this.state.loginpwd)){\r\n\r\n    //   }else{\r\n\r\n    //   }\r\n    // }else{\r\n    //   message.info('请检查账户密码')\r\n    // }\r\n    this.props.change(true);\r\n    return true\r\n  }\r\n\r\n  userRegester = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.status === \"login\"\r\n        ? <div className=\"loginPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户登录</h1>\r\n            </div>\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入邮箱/手机号\"\r\n              value={this.state.loginuser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginuser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginuser');\r\n              }}\r\n              prefix={<UserOutlined />} />\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"请输入密码\"\r\n              value={this.state.loginpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginpwd');\r\n              }}\r\n              prefix={<UnlockOutlined />} />\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('register') }}>\r\n                  还没账户注册一个？\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                {/* <Button className=\"register\" type=\"default\" shape=\"round\">注册</Button> */}\r\n                <Button className=\"login\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userLogin() }}>\r\n                  登录\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <div className=\"registerPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户注册</h1>\r\n            </div>\r\n\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入用户名/手机号\"\r\n              prefix={<UserOutlined />}\r\n              value={this.state.registeruser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'registeruser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'registeruser');\r\n              }}\r\n            />\r\n\r\n            <Tooltip\r\n              trigger={['focus']}\r\n              title={`1、密码必须由数字、字符、特殊字符三种中的两种组成;\r\n              2、密码长度不能少于8个字符;`}\r\n              placement=\"right\"\r\n              overlayClassName=\"numeric-input\"\r\n            >\r\n              <Input.Password className=\"password\"\r\n                size=\"large\"\r\n                visibilityToggle={false}\r\n                placeholder=\"请输入密码\"\r\n                value={this.state.registerpwd}\r\n                onChange={(v) => {\r\n                  this.userInput(v, 'registerpwd');\r\n                }}\r\n                onBlur={(v) => {\r\n                  this.userBlur(v, 'registerpwd');\r\n                }}\r\n                prefix={<UnlockOutlined />}\r\n              />\r\n            </Tooltip>\r\n\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              visibilityToggle={false}\r\n              value={this.state.comfirmpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'comfirmpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'comfirmpwd');\r\n              }}\r\n              placeholder=\"请再次确认密码\"\r\n              prefix={<UnlockOutlined />}\r\n            />\r\n\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('login') }}>\r\n                  有账户直接登录！\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button className=\"cancle\"\r\n                  type=\"default\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.statusChage('login') }}>\r\n                  取消\r\n                  </Button>\r\n                <Button className=\"register\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userRegester() }}>\r\n                  注册\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\components\\utils\\index.js",[],"C:\\Users\\Administrator\\Desktop\\my\\noteTaking\\src\\web\\src\\server.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":73,"column":14,"nodeType":"75","messageId":"76","endLine":73,"endColumn":16},{"ruleId":"73","severity":1,"message":"74","line":92,"column":26,"nodeType":"75","messageId":"76","endLine":92,"endColumn":28},{"ruleId":"73","severity":1,"message":"77","line":124,"column":23,"nodeType":"75","messageId":"76","endLine":124,"endColumn":25},{"ruleId":"73","severity":1,"message":"74","line":126,"column":25,"nodeType":"75","messageId":"76","endLine":126,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":126,"column":69,"nodeType":"75","messageId":"76","endLine":126,"endColumn":71},{"ruleId":"73","severity":1,"message":"74","line":188,"column":33,"nodeType":"75","messageId":"76","endLine":188,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":197,"column":33,"nodeType":"75","messageId":"76","endLine":197,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":204,"column":33,"nodeType":"75","messageId":"76","endLine":204,"endColumn":35},{"ruleId":"69","severity":1,"message":"78","line":50,"column":4,"nodeType":"71","messageId":"72","endLine":50,"endColumn":12},{"ruleId":"69","severity":1,"message":"79","line":51,"column":4,"nodeType":"71","messageId":"72","endLine":51,"endColumn":18},{"ruleId":"73","severity":1,"message":"77","line":99,"column":40,"nodeType":"75","messageId":"76","endLine":99,"endColumn":42},{"ruleId":"73","severity":1,"message":"77","line":105,"column":40,"nodeType":"75","messageId":"76","endLine":105,"endColumn":42},{"ruleId":"73","severity":1,"message":"74","line":106,"column":39,"nodeType":"75","messageId":"76","endLine":106,"endColumn":41},{"ruleId":"69","severity":1,"message":"80","line":2,"column":24,"nodeType":"71","messageId":"72","endLine":2,"endColumn":31},{"ruleId":"81","severity":1,"message":"82","line":63,"column":21,"nodeType":"83","endLine":63,"endColumn":98},{"ruleId":"81","severity":1,"message":"82","line":64,"column":21,"nodeType":"83","endLine":64,"endColumn":125},{"ruleId":"81","severity":1,"message":"82","line":69,"column":28,"nodeType":"83","endLine":69,"endColumn":80},{"ruleId":"81","severity":1,"message":"82","line":80,"column":29,"nodeType":"83","endLine":80,"endColumn":131},{"ruleId":"81","severity":1,"message":"82","line":80,"column":139,"nodeType":"83","endLine":80,"endColumn":208},{"ruleId":"81","severity":1,"message":"82","line":84,"column":28,"nodeType":"83","endLine":84,"endColumn":77},{"ruleId":"73","severity":1,"message":"74","line":78,"column":36,"nodeType":"75","messageId":"76","endLine":78,"endColumn":38},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'http' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","'titleStr' is assigned a value but never used.","'descriptionStr' is assigned a value but never used.","'message' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
=======
[{"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js":"1","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js":"2","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js":"3","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js":"4","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js":"5","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js":"6","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js":"7","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js":"8","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js":"9","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js":"10"},{"size":523,"mtime":1614166376315,"results":"11","hashOfConfig":"12"},{"size":622,"mtime":1620389534131,"results":"13","hashOfConfig":"12"},{"size":8269,"mtime":1620390601216,"results":"14","hashOfConfig":"12"},{"size":12536,"mtime":1620401204070,"results":"15","hashOfConfig":"12"},{"size":944,"mtime":1619009552986,"results":"16","hashOfConfig":"12"},{"size":1265,"mtime":1614768168228,"results":"17","hashOfConfig":"12"},{"size":2926,"mtime":1620310167972,"results":"18","hashOfConfig":"12"},{"size":8004,"mtime":1620399991447,"results":"19","hashOfConfig":"12"},{"size":4584,"mtime":1620398876364,"results":"20","hashOfConfig":"12"},{"size":4114,"mtime":1620401273112,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nfz1d5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js",[],["45","46"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js",["47"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js",["48"],"import React, { Component } from 'react';\r\n\r\nimport { Input, Button, Tooltip, message } from 'antd';\r\nimport utils from '../utils'\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport http from '../../server';\r\nimport './login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    status: 'login',\r\n    registeruser: \"\",\r\n    registerpwd: \"\",\r\n    comfirmpwd: \"\",\r\n    loginuser: \"\",\r\n    loginpwd: \"\"\r\n  }\r\n\r\n  loginState = [0, 0]\r\n\r\n  registerState = [0, 0]\r\n\r\n  statusChage = (status,params) => {\r\n    let stateObj = {\r\n      status,\r\n      registeruser: \"\",\r\n      registerpwd: \"\",\r\n      comfirmpwd: \"\",\r\n      loginuser: \"\",\r\n      loginpwd: \"\",\r\n    }\r\n    if(params){\r\n      stateObj.loginuser = this.state.registeruser;\r\n      stateObj.loginpwd = this.state.registerpwd;\r\n    }\r\n    this.setState(stateObj)\r\n  }\r\n\r\n  userInput = (v, type) => {\r\n\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        this.setState({ registeruser: v.target.value })\r\n        break;\r\n      case \"registerpwd\":\r\n        this.setState({ registerpwd: v.target.value })\r\n        break;\r\n      case \"comfirmpwd\":\r\n        this.setState({ comfirmpwd: v.target.value })\r\n        break;\r\n      case \"loginuser\":\r\n        this.setState({ loginuser: v.target.value })\r\n        break;\r\n      case \"loginpwd\":\r\n        this.setState({ loginpwd: v.target.value })\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  userBlur = (v, type) => {\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"registerpwd\":\r\n        if (utils.passwordAvailable(v.target.value)) {\r\n\r\n        } else {\r\n          message.info('密码格式不正确')\r\n        }\r\n        break;\r\n      case \"comfirmpwd\":\r\n        if (this.state.registerpwd == v.target.value) {\r\n\r\n        } else {\r\n          message.info('确认密码保持一致')\r\n        }\r\n        break;\r\n      case \"loginuser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"loginpwd\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  userLogin = () => {\r\n    http.post('login',{\r\n      \"em_ph\":this.state.loginuser,\r\n      \"passwd\":this.state.loginpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        if(data.data.data.id){\r\n          localStorage.setItem(\"user\",window.btoa(window.encodeURIComponent(JSON.stringify(data.data.data))));\r\n          this.props.change(true);\r\n          //存\r\n        }\r\n        else{\r\n          message.error('登录失败')\r\n          return ;\r\n        }  \r\n      }\r\n      else{\r\n        message.error(\"请检查用户名、密码\");\r\n      }\r\n    })\r\n    return true\r\n  }\r\n\r\n  userRegester = () => {\r\n    http.post('register',{\r\n      \"em_ph\":this.state.registeruser,\r\n      \"passwd\":this.state.registerpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        // this.props.change(true);\r\n        this.statusChage('login',{fromPage:'reggister'});\r\n      } else {\r\n        message.error(\"注册失败\");\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.status === \"login\"\r\n        ? <div className=\"loginPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户登录</h1>\r\n            </div>\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入邮箱/手机号\"\r\n              value={this.state.loginuser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginuser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginuser');\r\n              }}\r\n              prefix={<UserOutlined />} />\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"请输入密码\"\r\n              value={this.state.loginpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginpwd');\r\n              }}\r\n              prefix={<UnlockOutlined />} />\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('register') }}>\r\n                  还没账户注册一个？\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                {/* <Button className=\"register\" type=\"default\" shape=\"round\">注册</Button> */}\r\n                <Button className=\"login\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userLogin() }}>\r\n                  登录\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <div className=\"registerPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户注册</h1>\r\n            </div>\r\n\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入用户名/手机号\"\r\n              prefix={<UserOutlined />}\r\n              value={this.state.registeruser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'registeruser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'registeruser');\r\n              }}\r\n            />\r\n\r\n            <Tooltip\r\n              trigger={['focus']}\r\n              title={`1、密码必须由数字、字符、特殊字符三种中的两种组成;\r\n              2、密码长度不能少于8个字符;`}\r\n              placement=\"right\"\r\n              overlayClassName=\"numeric-input\"\r\n            >\r\n              <Input.Password className=\"password\"\r\n                size=\"large\"\r\n                visibilityToggle={false}\r\n                placeholder=\"请输入密码\"\r\n                value={this.state.registerpwd}\r\n                onChange={(v) => {\r\n                  this.userInput(v, 'registerpwd');\r\n                }}\r\n                onBlur={(v) => {\r\n                  this.userBlur(v, 'registerpwd');\r\n                }}\r\n                prefix={<UnlockOutlined />}\r\n              />\r\n            </Tooltip>\r\n\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              visibilityToggle={false}\r\n              value={this.state.comfirmpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'comfirmpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'comfirmpwd');\r\n              }}\r\n              placeholder=\"请再次确认密码\"\r\n              prefix={<UnlockOutlined />}\r\n            />\r\n\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('login') }}>\r\n                  有账户直接登录！\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button className=\"cancle\"\r\n                  type=\"default\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.statusChage('login') }}>\r\n                  取消\r\n                  </Button>\r\n                <Button className=\"register\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userRegester() }}>\r\n                  注册\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js",["49","50","51","52","53","54","55","56","57","58","59","60"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js",["61"],"import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nlet root = 'http://xpmxia.cn.utools.club/';\r\nlet http = {\r\n  post: \"\",\r\n  get: \"\",\r\n  delete:\"\"\r\n}\r\nhttp.post = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.get = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.delete = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport default http;","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js",["62","63","64","65","66","67","68","69","70","71"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js",["72","73","74","75","76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":20,"nodeType":"84","messageId":"85","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":84,"column":36,"nodeType":"88","messageId":"89","endLine":84,"endColumn":38},{"ruleId":"82","severity":1,"message":"90","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":9},{"ruleId":"82","severity":1,"message":"91","line":18,"column":7,"nodeType":"84","messageId":"85","endLine":18,"endColumn":11},{"ruleId":"82","severity":1,"message":"92","line":32,"column":7,"nodeType":"84","messageId":"85","endLine":32,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":96,"column":14,"nodeType":"88","messageId":"89","endLine":96,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":105,"column":13,"nodeType":"88","messageId":"89","endLine":105,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":126,"column":26,"nodeType":"88","messageId":"89","endLine":126,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":162,"column":80,"nodeType":"88","messageId":"89","endLine":162,"endColumn":82},{"ruleId":"86","severity":1,"message":"93","line":162,"column":134,"nodeType":"88","messageId":"89","endLine":162,"endColumn":136},{"ruleId":"86","severity":1,"message":"87","line":279,"column":33,"nodeType":"88","messageId":"89","endLine":279,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":288,"column":33,"nodeType":"88","messageId":"89","endLine":288,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":302,"column":33,"nodeType":"88","messageId":"89","endLine":302,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":309,"column":33,"nodeType":"88","messageId":"89","endLine":309,"endColumn":35},{"ruleId":"82","severity":1,"message":"94","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":10},{"ruleId":"82","severity":1,"message":"95","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":101,"column":21,"nodeType":"98","endLine":101,"endColumn":98},{"ruleId":"96","severity":1,"message":"97","line":102,"column":21,"nodeType":"98","endLine":102,"endColumn":125},{"ruleId":"96","severity":1,"message":"97","line":106,"column":28,"nodeType":"98","endLine":106,"endColumn":80},{"ruleId":"96","severity":1,"message":"97","line":120,"column":35,"nodeType":"98","endLine":120,"endColumn":107},{"ruleId":"96","severity":1,"message":"97","line":121,"column":21,"nodeType":"98","endLine":121,"endColumn":96},{"ruleId":"96","severity":1,"message":"97","line":122,"column":21,"nodeType":"98","endLine":122,"endColumn":90},{"ruleId":"96","severity":1,"message":"97","line":124,"column":21,"nodeType":"98","endLine":124,"endColumn":92},{"ruleId":"96","severity":1,"message":"97","line":125,"column":21,"nodeType":"98","endLine":125,"endColumn":90},{"ruleId":"96","severity":1,"message":"97","line":129,"column":28,"nodeType":"98","endLine":129,"endColumn":77},{"ruleId":"82","severity":1,"message":"91","line":8,"column":5,"nodeType":"84","messageId":"85","endLine":8,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":108,"column":19,"nodeType":"98","endLine":108,"endColumn":92},{"ruleId":"96","severity":1,"message":"97","line":112,"column":28,"nodeType":"98","endLine":112,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":128,"column":19,"nodeType":"98","endLine":128,"endColumn":91},{"ruleId":"96","severity":1,"message":"97","line":129,"column":19,"nodeType":"98","endLine":129,"endColumn":123},{"ruleId":"96","severity":1,"message":"97","line":133,"column":26,"nodeType":"98","endLine":133,"endColumn":50},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is defined but never used.","'data' is assigned a value but never used.","'groundData' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'qs' is defined but never used.","'Avatar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
>>>>>>> 18610365d1bb552739a8d91c10b25602ec91d6cb
