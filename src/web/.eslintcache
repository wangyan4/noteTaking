
[{"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js":"1","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js":"2","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js":"3","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js":"4","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js":"5","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js":"6","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js":"7","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js":"8","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js":"9","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js":"10"},{"size":523,"mtime":1614166376315,"results":"11","hashOfConfig":"12"},{"size":622,"mtime":1620389534131,"results":"13","hashOfConfig":"12"},{"size":8269,"mtime":1620390601216,"results":"14","hashOfConfig":"12"},{"size":12536,"mtime":1620401204070,"results":"15","hashOfConfig":"12"},{"size":944,"mtime":1619009552986,"results":"16","hashOfConfig":"12"},{"size":1265,"mtime":1614768168228,"results":"17","hashOfConfig":"12"},{"size":2926,"mtime":1620310167972,"results":"18","hashOfConfig":"12"},{"size":8004,"mtime":1620399991447,"results":"19","hashOfConfig":"12"},{"size":5537,"mtime":1620485048695,"results":"20","hashOfConfig":"12"},{"size":4114,"mtime":1620401273112,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nfz1d5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js",[],["48","49"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js",["50"],"import './App.css';\r\nimport { useState, useEffect } from 'react'\r\n// import Header from './components/header/header'\r\nimport Body from './components/body/body';\r\nimport Login from './components/login/login';\r\nfunction App() {\r\n  let [ state, setState ]= useState(false);\r\n  function stateChange(state){\r\n    setState(state);\r\n    \r\n  }\r\n  // useEffect(()=>{\r\n  //   console.log(state)\r\n  // },[state])\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <Header /> */}\r\n      { \r\n        state\r\n        // true\r\n        ?<Body/>\r\n        :<Login change={stateChange}/>\r\n       }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js",["51"],"import React, { Component } from 'react';\r\n\r\nimport { Input, Button, Tooltip, message } from 'antd';\r\nimport utils from '../utils'\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport http from '../../server';\r\nimport './login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    status: 'login',\r\n    registeruser: \"\",\r\n    registerpwd: \"\",\r\n    comfirmpwd: \"\",\r\n    loginuser: \"\",\r\n    loginpwd: \"\"\r\n  }\r\n\r\n  loginState = [0, 0]\r\n\r\n  registerState = [0, 0]\r\n\r\n  statusChage = (status,params) => {\r\n    let stateObj = {\r\n      status,\r\n      registeruser: \"\",\r\n      registerpwd: \"\",\r\n      comfirmpwd: \"\",\r\n      loginuser: \"\",\r\n      loginpwd: \"\",\r\n    }\r\n    if(params){\r\n      stateObj.loginuser = this.state.registeruser;\r\n      stateObj.loginpwd = this.state.registerpwd;\r\n    }\r\n    this.setState(stateObj)\r\n  }\r\n\r\n  userInput = (v, type) => {\r\n\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        this.setState({ registeruser: v.target.value })\r\n        break;\r\n      case \"registerpwd\":\r\n        this.setState({ registerpwd: v.target.value })\r\n        break;\r\n      case \"comfirmpwd\":\r\n        this.setState({ comfirmpwd: v.target.value })\r\n        break;\r\n      case \"loginuser\":\r\n        this.setState({ loginuser: v.target.value })\r\n        break;\r\n      case \"loginpwd\":\r\n        this.setState({ loginpwd: v.target.value })\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  userBlur = (v, type) => {\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"registerpwd\":\r\n        if (utils.passwordAvailable(v.target.value)) {\r\n\r\n        } else {\r\n          message.info('密码格式不正确')\r\n        }\r\n        break;\r\n      case \"comfirmpwd\":\r\n        if (this.state.registerpwd == v.target.value) {\r\n\r\n        } else {\r\n          message.info('确认密码保持一致')\r\n        }\r\n        break;\r\n      case \"loginuser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"loginpwd\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  userLogin = () => {\r\n    http.post('login',{\r\n      \"em_ph\":this.state.loginuser,\r\n      \"passwd\":this.state.loginpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        if(data.data.data.id){\r\n          localStorage.setItem(\"user\",window.btoa(window.encodeURIComponent(JSON.stringify(data.data.data))));\r\n          this.props.change(true);\r\n          //存\r\n        }\r\n        else{\r\n          message.error('登录失败')\r\n          return ;\r\n        }  \r\n      }\r\n      else{\r\n        message.error(\"请检查用户名、密码\");\r\n      }\r\n    })\r\n    return true\r\n  }\r\n\r\n  userRegester = () => {\r\n    http.post('register',{\r\n      \"em_ph\":this.state.registeruser,\r\n      \"passwd\":this.state.registerpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        // this.props.change(true);\r\n        this.statusChage('login',{fromPage:'reggister'});\r\n      } else {\r\n        message.error(\"注册失败\");\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.status === \"login\"\r\n        ? <div className=\"loginPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户登录</h1>\r\n            </div>\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入邮箱/手机号\"\r\n              value={this.state.loginuser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginuser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginuser');\r\n              }}\r\n              prefix={<UserOutlined />} />\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"请输入密码\"\r\n              value={this.state.loginpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginpwd');\r\n              }}\r\n              prefix={<UnlockOutlined />} />\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('register') }}>\r\n                  还没账户注册一个？\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                {/* <Button className=\"register\" type=\"default\" shape=\"round\">注册</Button> */}\r\n                <Button className=\"login\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userLogin() }}>\r\n                  登录\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <div className=\"registerPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户注册</h1>\r\n            </div>\r\n\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入用户名/手机号\"\r\n              prefix={<UserOutlined />}\r\n              value={this.state.registeruser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'registeruser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'registeruser');\r\n              }}\r\n            />\r\n\r\n            <Tooltip\r\n              trigger={['focus']}\r\n              title={`1、密码必须由数字、字符、特殊字符三种中的两种组成;\r\n              2、密码长度不能少于8个字符;`}\r\n              placement=\"right\"\r\n              overlayClassName=\"numeric-input\"\r\n            >\r\n              <Input.Password className=\"password\"\r\n                size=\"large\"\r\n                visibilityToggle={false}\r\n                placeholder=\"请输入密码\"\r\n                value={this.state.registerpwd}\r\n                onChange={(v) => {\r\n                  this.userInput(v, 'registerpwd');\r\n                }}\r\n                onBlur={(v) => {\r\n                  this.userBlur(v, 'registerpwd');\r\n                }}\r\n                prefix={<UnlockOutlined />}\r\n              />\r\n            </Tooltip>\r\n\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              visibilityToggle={false}\r\n              value={this.state.comfirmpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'comfirmpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'comfirmpwd');\r\n              }}\r\n              placeholder=\"请再次确认密码\"\r\n              prefix={<UnlockOutlined />}\r\n            />\r\n\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('login') }}>\r\n                  有账户直接登录！\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button className=\"cancle\"\r\n                  type=\"default\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.statusChage('login') }}>\r\n                  取消\r\n                  </Button>\r\n                <Button className=\"register\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userRegester() }}>\r\n                  注册\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js",["52","53","54","55","56","57","58","59","60","61","62","63"],"import React, { Component, createRef } from 'react';\r\nimport { Menu, Button, Modal, Empty, Input, message, Checkbox } from 'antd';\r\nimport _ from 'loadsh';\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  MenuFoldOutlined\r\n} from '@ant-design/icons';\r\nimport Editor from '../editor';\r\nimport NoteList from '../note';\r\nimport MySpace from '../myspace'\r\nimport http from '../../server';\r\nimport './body.css';\r\n\r\nconst { TextArea } = Input;\r\nfunction GenNonDuplicateID(randomLength) {\r\n  return Number(Math.random().toString().substr(3, randomLength) + Date.now()).toString(36)\r\n}\r\nconst data = [\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '你好，李焕英',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>你好，李焕英</p>\"\r\n  },\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '沐浴之王',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>沐浴之王</p>\"\r\n  }\r\n];\r\nconst groundData = [\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '战狼2',\r\n    description: \"这是一段描述\",\r\n    content: `<p>&ensp;&ensp;&ensp;战狼2</p><p>&ensp;&ensp;&ensp;说到爱国心，说到军人梦，暑假里最热门的电影,《战狼2》，大家一定都不陌生吧？</p><p>&ensp;&ensp;&ensp;\r\n\r\n    影片讲述了脱下军装的冷锋被卷入了一场非洲国家的叛乱，本来能够安全撤离的他无法忘记军人的职责，重回战场展开救援的故事</p><p>&ensp;&ensp;&ensp;\r\n    \r\n    2015年3月26日起，由沙特阿拉伯和埃及、约旦、苏丹等其他海湾国家参加的国际联军在也门发动打击胡塞武装的军事行动。此次军事行动使得当地局势骤然紧张。当时在也门共有590名中国公民，为了保障这些人的生命财产安全，中国政府决定派正在亚丁湾执行护航任务的临沂舰、潍坊舰和微山湖舰转向也门执行撤侨任务。2015年3月29日中午，海军第十九批护航编队临沂舰抵达也门亚丁港。临沂舰进入一级战斗部署，各战位严密组织观察警戒，全副武装的特战队员和水兵荷枪实弹在码头安全警戒，这是中国第一次使用武装军舰从外国撤侨，临沂舰接回的第一批人员共计124人，这124人在39分钟内全部登舰完毕，可见中国海军的效率之高。3月30日，第二批400多人乘坐中国海军潍坊舰顺利离开也门使得这400多人在80分钟内就全部顺利登舰撤离。全部中国公民都已完成撤离。</p><p>&ensp;&ensp;&ensp;\r\n    \r\n    2015年4月25日，尼泊尔境内发生8.1级大地震，尼泊尔是一个旅游国家，地震发生时有大量中国游客在境内旅游。地震发生后，，中国率先调动国航，南航，东航的客机进入加德满都机场，成为此次灾难中第一个完成撤侨的国家，共安全接回5685名在尼滞留中国公民。</p><p>&ensp;&ensp;&ensp;\r\n    \r\n    一朝是战狼，终身是战狼。军旅已终，情怀犹在;军装已脱，职责难释;军营已别，担当不忘，祖国与人民需要，召必回，他为拯救深陷屠杀的同胞和难民勇闯战区。</p><p>&ensp;&ensp;&ensp;\r\n    \r\n    影片中，空手擒拿一招制敌，飞檐走壁弹无虚发，扑面而来的军人血性、责任担当和爱国情怀感染着每名观众，更唤醒了沉寂在我内心深处的英雄情结和民族血性，唤醒了我的军人梦想。从冷锋的身上，我看到了中国军人身上的阳刚、英雄与担当，看到了新时代军人的英雄血性在新时代的强军征程上焕发出的新活力。</p><p>&ensp;&ensp;&ensp;\r\n    \r\n    我爱我的祖国，我有一个军人梦！</p>`\r\n  },\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '功夫之王',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>功夫之王</p>\"\r\n  }\r\n];\r\nlet _this;\r\nexport default class NavBar extends Component {\r\n  constructor() {\r\n    super();\r\n    _this = this;\r\n    this.previewDom = createRef();\r\n    this.state = {\r\n      collapsed: false,\r\n      showPage: 1,//导航栏标志位\r\n      isShow: true, //notelist是否显示\r\n      editItem: {}, //当前操作项\r\n      showItem: {},//editor 展示项\r\n      data: [], //我的笔记列表\r\n      groundData: [], //分享列表\r\n      flag: false, //预览页显示\r\n      modal1Visible:false,\r\n      description:\"\",\r\n      title:\"\",\r\n      newStatus:false,\r\n      checked:false\r\n    };\r\n  }\r\n  toggleCollapsed = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n  componentDidMount(){\r\n   _this.getList();\r\n    \r\n  }\r\n\r\n  menuChange = (code) => {\r\n    var changeObj = {\r\n      note: \"1\",\r\n      ground: \"2\",\r\n      my: \"3\"\r\n    }\r\n    if (code == 'note') {\r\n      _this.getList();\r\n      this.setState({\r\n        showPage: changeObj[code],\r\n        showItem: this.state.data[0] ? this.state.data[0] : {},\r\n        isShow: true,\r\n        flag: false\r\n      });\r\n    }\r\n    if(code == 'ground'){\r\n      http.get('share')\r\n      .then(data=>{\r\n        console.log(data);\r\n        data.data.data.sort((a,b)=>new Date(a.c_time)-new Date(b.c_time))\r\n        this.setState({\r\n          groundData:data.data.data\r\n        })\r\n      })\r\n    }\r\n    this.setState({\r\n      showPage: changeObj[code],\r\n      isShow: true,\r\n      flag: false\r\n    });\r\n  }\r\n  preview = (currentItem) => {\r\n    let editItem = currentItem.item;\r\n    if (editItem.preview) {\r\n      this.previewDom.current.innerHTML = editItem.content;\r\n    }\r\n    if (editItem._status == \"edit\") {\r\n      this.setState({\r\n        editItem,\r\n        showItem: editItem,\r\n        isShow: editItem.flag,\r\n        flag: editItem.preview\r\n      }, () => {\r\n        console.log(this.state)\r\n      })  \r\n    }else {\r\n      this.setState({\r\n        editItem,\r\n        isShow: editItem.flag,\r\n        flag: editItem.preview\r\n      }, () => {\r\n        console.log(this.state)\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  async delItem (currentItem) {\r\n    let editItem = currentItem.item;\r\n    Modal.confirm({\r\n      title: '确认',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: '确认要删除吗?',\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        // let newList = _.filter(_this.state.data, function (o) {\r\n        //   return o.id != editItem.id;\r\n        // })\r\n        http.delete(`delnote/${editItem.id}`).then(data=>{\r\n          if(data.data.success){\r\n            _this.getList();\r\n            if (_this.state.showItem && _this.state.showItem.id && editItem.id == _this.state.showItem.id && _this.state.data.length != 0) {\r\n              _this.setState({\r\n                editItem,\r\n                showItem: _this.state.data[0]\r\n              })\r\n            } else {\r\n              _this.setState({\r\n                editItem,\r\n                showItem: {\r\n                  id: null,\r\n                  description: null,\r\n                  content: null,\r\n                  title: null\r\n                }\r\n              });\r\n            }\r\n          }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  addItem = () => {\r\n    this.setState({\r\n      isShow: true,\r\n      showItem: {},\r\n      modal1Visible:true,\r\n      newStatus:true,\r\n      title:\"\",\r\n      description:\"\",\r\n      checked:false\r\n    })\r\n  }\r\n\r\n  onSave =(isShow, newData)=>{\r\n    _this.getList();\r\n    var { showItem } = this.state;\r\n    if(newData){\r\n      showItem.content = newData.content;\r\n      this.setState({\r\n        isShow:isShow,\r\n        showItem\r\n      })\r\n    }else{\r\n      this.setState({\r\n        isShow:isShow,\r\n        showItem:this.state.data?this.state.data[0]:[]\r\n      })\r\n    }\r\n  }\r\n  getList = ()=>{\r\n    var user = JSON.parse(decodeURIComponent(window.atob(localStorage.getItem(\"user\"))));\r\n    http.get( `allnotes/${user.id}`).then((data)=>{\r\n      if(data.data.success){\r\n        var showItem = [];\r\n        if(data.data.data){\r\n          showItem = data.data.data[0]\r\n        }\r\n        data.data.data.sort((a,b)=>new Date(a.c_time)-new Date(b.c_time))\r\n        _this.setState({\r\n          data:data.data.data,\r\n          showItem\r\n        })\r\n      } else {\r\n        message.error('获取列表失败')\r\n      }\r\n    });\r\n      \r\n  }\r\n  setModal1Visible = (showState)=>{\r\n    this.setState({\r\n      modal1Visible:showState\r\n    })\r\n  }\r\n  onDescriptionChange = ({ target: { value } })=>{\r\n    this.setState({\r\n      description: value\r\n    })\r\n  }\r\n  onTitleChange = ({ target: { value } })=>{\r\n    this.setState({\r\n      title: value\r\n    })\r\n  }\r\n  onPubChange = (e)=>{\r\n    this.setState({\r\n      checked: e.target.checked,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bodyContent\" >\r\n        <div className=\"navList\" >\r\n          <Menu\r\n            defaultSelectedKeys={['1']}\r\n            defaultOpenKeys={['sub1']}\r\n            mode=\"inline\"\r\n            theme=\"light\"\r\n            inlineCollapsed={this.state.collapsed}\r\n          >\r\n            <Button type=\"primary\" onClick={this.toggleCollapsed} style={this.state.collapsed ? { width: 80 } : { width: \"100%\" }}>\r\n              {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined)}\r\n            </Button>\r\n            <Menu.Item key=\"1\" icon={<i className=\"iconfont iconbiji\"></i>} onClick={this.menuChange.bind(this, 'note')}>\r\n              笔记\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\" icon={<i className=\"iconfont iconguangchang\"></i>} onClick={this.menuChange.bind(this, 'ground')}>\r\n              分享广场\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\" icon={<i className=\"iconfont iconwode\"></i>} onClick={this.menuChange.bind(this, 'my')}>\r\n              我的\r\n            </Menu.Item>\r\n          </Menu>\r\n        </div>\r\n        <div className=\"content\">\r\n          {\r\n            this.state.showPage == 1 && this.state.isShow\r\n              ? <div className=\"noteList\">\r\n                <Button type=\"primary\" shape=\"round\" onClick={() => { this.addItem() }}>新建</Button>\r\n                {/* <Button type=\"default\">新增</Button> */}\r\n                <NoteList preview={this.preview} data={this.state.data} delItem={this.delItem} getList={this.getList} />\r\n              </div>\r\n              : null\r\n          }\r\n          {\r\n            this.state.showPage == 1\r\n              ? <div className=\"editor\">\r\n                {this.state.editItem\r\n                ?<Editor editItem={this.state.showItem} aritcle={{\"title\":this.state.title,\"description\":this.state.description,\"isPub\":this.state.checked}} newStatus={this.state.newStatus} save={this.onSave}/>\r\n                :<Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\r\n                }\r\n                {/* {!this.state.isShow\r\n                ?<Editor editItem={this.state.showItem} save={this.onSave}/>\r\n                :<Empty image={Empty.PRESENTED_IMAGE_SIMPLE}/>\r\n                } */}\r\n              </div>\r\n              : null\r\n          }\r\n          {\r\n            this.state.showPage == 2\r\n              ? <div className=\"noteList\">\r\n                <NoteList preview={this.preview} isPersonal data={this.state.groundData} delItem={this.delItem} />\r\n              </div>\r\n              : null\r\n          }\r\n          {\r\n            this.state.showPage == 3\r\n              ? <div className=\"my\">\r\n                <MySpace preview={this.preview} isPersonal data={this.state.groundData} delItem={this.delItem} />\r\n              </div>\r\n              : null\r\n          }\r\n          <div className=\"editorPreview\"\r\n            ref={this.previewDom}\r\n            style={!this.state.flag ? { display: \"none\" } : { display: \"block\" }}\r\n          ></div>\r\n        </div>\r\n        <Modal\r\n          title=\"新建笔记\"\r\n          style={{ top: 20 }}\r\n          visible={this.state.modal1Visible}\r\n          onOk={() => this.setModal1Visible(false)}\r\n          onCancel={() => this.setModal1Visible(false)}\r\n        >\r\n          \r\n          <p>\r\n            标题:<Input placeholder=\"请输入标题\" onChange = {this.onTitleChange} value={this.state.title}/>\r\n          </p>\r\n          <p>\r\n            描述:\r\n            <TextArea\r\n              value={this.state.description}\r\n              onChange={this.onDescriptionChange}\r\n              placeholder=\"请输入描述\"\r\n              autoSize={{ minRows: 3, maxRows: 5 }}\r\n            />\r\n          </p>\r\n          <p>\r\n            是否开源:&ensp;\r\n            <Checkbox\r\n            checked={this.state.checked}\r\n            onChange={this.onPubChange}\r\n            >\r\n            </Checkbox>\r\n          </p>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js",["64"],"import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nlet root = 'http://xpmxia.cn.utools.club/';\r\nlet http = {\r\n  post: \"\",\r\n  get: \"\",\r\n  delete:\"\"\r\n}\r\nhttp.post = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.get = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.delete = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport default http;","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js",["65","66","67","68","69","70","71","72","73","74","75","76"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js",["77","78","79","80","81","82"],"import React, { Component } from 'react';\r\nimport { List, message, Modal } from 'antd';\r\nimport http from '../../server';\r\nimport './index.css';\r\nfunction GenNonDuplicateID(randomLength) {\r\n  return Number(Math.random().toString().substr(3, randomLength) + Date.now()).toString(36)\r\n}\r\nlet data =[\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '你好，李焕英',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>你好，李焕英</p>\"\r\n  },\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '你好，李焕英',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>你好，李焕英</p>\"\r\n  },\r\n  {\r\n    id: GenNonDuplicateID(8),\r\n    title: '你好，李焕英',\r\n    description: \"这是一段描述\",\r\n    content: \"<p>你好，李焕英</p>\"\r\n  },\r\n]\r\nlet _this;\r\nexport default class index extends Component {\r\n  constructor(){\r\n    super();\r\n    _this =this;\r\n    this.state={\r\n      myapprove:[],\r\n      approve:[]\r\n    }\r\n  }\r\n  componentDidMount(){\r\n    this.getList()\r\n  }\r\n  getList(){\r\n    // http.get( `allnotes/`)\r\n    //   .then(()=>{\r\n\r\n    //   });\r\n    var user = JSON.parse(decodeURIComponent(window.atob(localStorage.getItem(\"user\"))));\r\n    http.get(`clonelist/${user.id}`)\r\n      .then((data)=>{\r\n        if(data.data.data){\r\n          // message.warning('success')\r\n          data.data.data.sort((a,b)=>new Date(a.c_time)-new Date(b.c_time))\r\n          _this.setState({\r\n            myapprove:data.data.data\r\n          })\r\n        }\r\n    })\r\n    http.get(`reqlist/${user.id}`)\r\n      .then((data)=>{\r\n        if(data.data.data){\r\n          // message.warning('success')\r\n          data.data.data.sort((a,b)=>new Date(a.c_time)-new Date(b.c_time))\r\n          _this.setState({\r\n            approve:data.data.data\r\n          })\r\n        }\r\n        \r\n    })\r\n  }\r\n  isAgree = (item,flag)=>{\r\n    console.log(\"I'm agree %s\", item.id);\r\n    var msg = flag?'是否同意？':'是否拒绝？'\r\n    Modal.confirm({\r\n      title: '确认',\r\n      // icon: <ExclamationCircleOutlined />,\r\n      content: msg,\r\n      okText: '确认',\r\n      cancelText: '取消',\r\n      onOk: () => {\r\n        var params = {\r\n          \"nid\":item.copy_id,\r\n          \"uid\":item.uid,\r\n          flag:flag\r\n        }\r\n        http.post(`agree`,params).then(()=>{\r\n          message.success('操作成功');\r\n          this.getList();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n    // let {myapprove, approve} = this.state;\r\n    let {myapprove, approve} = this.state;\r\n    return (\r\n      <div className=\"myContent\">\r\n        <div className=\"mytop\">\r\n\r\n        </div>\r\n\r\n        <div className=\"mybottomleft\">\r\n          <List\r\n              itemLayout={\"horizontal\"}\r\n              dataSource={myapprove}\r\n              renderItem={item => (\r\n                <List.Item\r\n                  style={{marginLeft:50}}\r\n                  actions={[\r\n                  <a style={{ marginRight: 30 }} key=\"list-myapprove\" onClick={() => {  }}>{item.authority?\"已同意\":\"已拒绝\"}</a>\r\n                  ]}\r\n                >\r\n                  <List.Item.Meta\r\n                    title={<a onClick={() => {  }}>{item.title}</a>}\r\n                    description={item.description}\r\n                  />\r\n                </List.Item>\r\n              )}\r\n            />\r\n        </div>\r\n\r\n        <div className=\"mybottomright\">\r\n          <List\r\n            itemLayout={\"horizontal\"}\r\n            dataSource={approve}\r\n            renderItem={item => (\r\n              <List.Item\r\n                style={{marginLeft:50}}\r\n                actions={[\r\n                  <a key=\"list-approve-agree\" onClick={() => { this.isAgree(item,true) }}>同意</a>,\r\n                  <a style={{ marginRight: 30 }} key=\"list-approve-disagree\" onClick={() => { this.isAgree(item,false) }}>拒绝</a>\r\n                ]}\r\n              >\r\n                <List.Item.Meta\r\n                  title={<a onClick={() => {  }}>{item.title}</a>}\r\n                  description={item.description}\r\n                />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":20,"nodeType":"89","messageId":"90","endLine":2,"endColumn":29},{"ruleId":"91","severity":1,"message":"92","line":84,"column":36,"nodeType":"93","messageId":"94","endLine":84,"endColumn":38},{"ruleId":"87","severity":1,"message":"95","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":9},{"ruleId":"87","severity":1,"message":"96","line":18,"column":7,"nodeType":"89","messageId":"90","endLine":18,"endColumn":11},{"ruleId":"87","severity":1,"message":"97","line":32,"column":7,"nodeType":"89","messageId":"90","endLine":32,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":96,"column":14,"nodeType":"93","messageId":"94","endLine":96,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":105,"column":13,"nodeType":"93","messageId":"94","endLine":105,"endColumn":15},{"ruleId":"91","severity":1,"message":"92","line":126,"column":26,"nodeType":"93","messageId":"94","endLine":126,"endColumn":28},{"ruleId":"91","severity":1,"message":"92","line":162,"column":80,"nodeType":"93","messageId":"94","endLine":162,"endColumn":82},{"ruleId":"91","severity":1,"message":"98","line":162,"column":134,"nodeType":"93","messageId":"94","endLine":162,"endColumn":136},{"ruleId":"91","severity":1,"message":"92","line":279,"column":33,"nodeType":"93","messageId":"94","endLine":279,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":288,"column":33,"nodeType":"93","messageId":"94","endLine":288,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":302,"column":33,"nodeType":"93","messageId":"94","endLine":302,"endColumn":35},{"ruleId":"91","severity":1,"message":"92","line":309,"column":33,"nodeType":"93","messageId":"94","endLine":309,"endColumn":35},{"ruleId":"87","severity":1,"message":"99","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":10},{"ruleId":"87","severity":1,"message":"100","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"101","line":109,"column":9,"nodeType":"89","messageId":"90","endLine":109,"endColumn":12},{"ruleId":"102","severity":1,"message":"103","line":127,"column":21,"nodeType":"104","endLine":127,"endColumn":98},{"ruleId":"102","severity":1,"message":"103","line":128,"column":21,"nodeType":"104","endLine":128,"endColumn":125},{"ruleId":"102","severity":1,"message":"103","line":132,"column":28,"nodeType":"104","endLine":132,"endColumn":80},{"ruleId":"102","severity":1,"message":"103","line":146,"column":35,"nodeType":"104","endLine":146,"endColumn":107},{"ruleId":"102","severity":1,"message":"103","line":147,"column":24,"nodeType":"104","endLine":147,"endColumn":101},{"ruleId":"102","severity":1,"message":"103","line":148,"column":21,"nodeType":"104","endLine":148,"endColumn":96},{"ruleId":"102","severity":1,"message":"103","line":149,"column":21,"nodeType":"104","endLine":149,"endColumn":90},{"ruleId":"102","severity":1,"message":"103","line":151,"column":21,"nodeType":"104","endLine":151,"endColumn":92},{"ruleId":"102","severity":1,"message":"103","line":152,"column":21,"nodeType":"104","endLine":152,"endColumn":90},{"ruleId":"102","severity":1,"message":"103","line":156,"column":28,"nodeType":"104","endLine":156,"endColumn":77},{"ruleId":"87","severity":1,"message":"96","line":8,"column":5,"nodeType":"89","messageId":"90","endLine":8,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":108,"column":19,"nodeType":"104","endLine":108,"endColumn":92},{"ruleId":"102","severity":1,"message":"103","line":112,"column":28,"nodeType":"104","endLine":112,"endColumn":52},{"ruleId":"102","severity":1,"message":"103","line":128,"column":19,"nodeType":"104","endLine":128,"endColumn":91},{"ruleId":"102","severity":1,"message":"103","line":129,"column":19,"nodeType":"104","endLine":129,"endColumn":123},{"ruleId":"102","severity":1,"message":"103","line":133,"column":26,"nodeType":"104","endLine":133,"endColumn":50},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is defined but never used.","'data' is assigned a value but never used.","'groundData' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'qs' is defined but never used.","'Avatar' is defined but never used.","'msg' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
=======
[{"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js":"1","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js":"2","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js":"3","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js":"4","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js":"5","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js":"6","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js":"7","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js":"8","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js":"9","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js":"10"},{"size":523,"mtime":1614166376315,"results":"11","hashOfConfig":"12"},{"size":622,"mtime":1620389534131,"results":"13","hashOfConfig":"12"},{"size":8269,"mtime":1620390601216,"results":"14","hashOfConfig":"12"},{"size":12536,"mtime":1620401204070,"results":"15","hashOfConfig":"12"},{"size":944,"mtime":1619009552986,"results":"16","hashOfConfig":"12"},{"size":1265,"mtime":1614768168228,"results":"17","hashOfConfig":"12"},{"size":2926,"mtime":1620310167972,"results":"18","hashOfConfig":"12"},{"size":8004,"mtime":1620399991447,"results":"19","hashOfConfig":"12"},{"size":4584,"mtime":1620398876364,"results":"20","hashOfConfig":"12"},{"size":4114,"mtime":1620401273112,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nfz1d5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js",[],["45","46"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js",["47"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js",["48"],"import React, { Component } from 'react';\r\n\r\nimport { Input, Button, Tooltip, message } from 'antd';\r\nimport utils from '../utils'\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport http from '../../server';\r\nimport './login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    status: 'login',\r\n    registeruser: \"\",\r\n    registerpwd: \"\",\r\n    comfirmpwd: \"\",\r\n    loginuser: \"\",\r\n    loginpwd: \"\"\r\n  }\r\n\r\n  loginState = [0, 0]\r\n\r\n  registerState = [0, 0]\r\n\r\n  statusChage = (status,params) => {\r\n    let stateObj = {\r\n      status,\r\n      registeruser: \"\",\r\n      registerpwd: \"\",\r\n      comfirmpwd: \"\",\r\n      loginuser: \"\",\r\n      loginpwd: \"\",\r\n    }\r\n    if(params){\r\n      stateObj.loginuser = this.state.registeruser;\r\n      stateObj.loginpwd = this.state.registerpwd;\r\n    }\r\n    this.setState(stateObj)\r\n  }\r\n\r\n  userInput = (v, type) => {\r\n\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        this.setState({ registeruser: v.target.value })\r\n        break;\r\n      case \"registerpwd\":\r\n        this.setState({ registerpwd: v.target.value })\r\n        break;\r\n      case \"comfirmpwd\":\r\n        this.setState({ comfirmpwd: v.target.value })\r\n        break;\r\n      case \"loginuser\":\r\n        this.setState({ loginuser: v.target.value })\r\n        break;\r\n      case \"loginpwd\":\r\n        this.setState({ loginpwd: v.target.value })\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  userBlur = (v, type) => {\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"registerpwd\":\r\n        if (utils.passwordAvailable(v.target.value)) {\r\n\r\n        } else {\r\n          message.info('密码格式不正确')\r\n        }\r\n        break;\r\n      case \"comfirmpwd\":\r\n        if (this.state.registerpwd == v.target.value) {\r\n\r\n        } else {\r\n          message.info('确认密码保持一致')\r\n        }\r\n        break;\r\n      case \"loginuser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"loginpwd\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  userLogin = () => {\r\n    http.post('login',{\r\n      \"em_ph\":this.state.loginuser,\r\n      \"passwd\":this.state.loginpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        if(data.data.data.id){\r\n          localStorage.setItem(\"user\",window.btoa(window.encodeURIComponent(JSON.stringify(data.data.data))));\r\n          this.props.change(true);\r\n          //存\r\n        }\r\n        else{\r\n          message.error('登录失败')\r\n          return ;\r\n        }  \r\n      }\r\n      else{\r\n        message.error(\"请检查用户名、密码\");\r\n      }\r\n    })\r\n    return true\r\n  }\r\n\r\n  userRegester = () => {\r\n    http.post('register',{\r\n      \"em_ph\":this.state.registeruser,\r\n      \"passwd\":this.state.registerpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        // this.props.change(true);\r\n        this.statusChage('login',{fromPage:'reggister'});\r\n      } else {\r\n        message.error(\"注册失败\");\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.status === \"login\"\r\n        ? <div className=\"loginPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户登录</h1>\r\n            </div>\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入邮箱/手机号\"\r\n              value={this.state.loginuser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginuser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginuser');\r\n              }}\r\n              prefix={<UserOutlined />} />\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"请输入密码\"\r\n              value={this.state.loginpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginpwd');\r\n              }}\r\n              prefix={<UnlockOutlined />} />\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('register') }}>\r\n                  还没账户注册一个？\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                {/* <Button className=\"register\" type=\"default\" shape=\"round\">注册</Button> */}\r\n                <Button className=\"login\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userLogin() }}>\r\n                  登录\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <div className=\"registerPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户注册</h1>\r\n            </div>\r\n\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入用户名/手机号\"\r\n              prefix={<UserOutlined />}\r\n              value={this.state.registeruser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'registeruser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'registeruser');\r\n              }}\r\n            />\r\n\r\n            <Tooltip\r\n              trigger={['focus']}\r\n              title={`1、密码必须由数字、字符、特殊字符三种中的两种组成;\r\n              2、密码长度不能少于8个字符;`}\r\n              placement=\"right\"\r\n              overlayClassName=\"numeric-input\"\r\n            >\r\n              <Input.Password className=\"password\"\r\n                size=\"large\"\r\n                visibilityToggle={false}\r\n                placeholder=\"请输入密码\"\r\n                value={this.state.registerpwd}\r\n                onChange={(v) => {\r\n                  this.userInput(v, 'registerpwd');\r\n                }}\r\n                onBlur={(v) => {\r\n                  this.userBlur(v, 'registerpwd');\r\n                }}\r\n                prefix={<UnlockOutlined />}\r\n              />\r\n            </Tooltip>\r\n\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              visibilityToggle={false}\r\n              value={this.state.comfirmpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'comfirmpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'comfirmpwd');\r\n              }}\r\n              placeholder=\"请再次确认密码\"\r\n              prefix={<UnlockOutlined />}\r\n            />\r\n\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('login') }}>\r\n                  有账户直接登录！\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button className=\"cancle\"\r\n                  type=\"default\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.statusChage('login') }}>\r\n                  取消\r\n                  </Button>\r\n                <Button className=\"register\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userRegester() }}>\r\n                  注册\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js",["49","50","51","52","53","54","55","56","57","58","59","60"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js",["61"],"import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nlet root = 'http://xpmxia.cn.utools.club/';\r\nlet http = {\r\n  post: \"\",\r\n  get: \"\",\r\n  delete:\"\"\r\n}\r\nhttp.post = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.get = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.delete = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport default http;","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js",["62","63","64","65","66","67","68","69","70","71"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js",["72","73","74","75","76","77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":2,"column":20,"nodeType":"84","messageId":"85","endLine":2,"endColumn":29},{"ruleId":"86","severity":1,"message":"87","line":84,"column":36,"nodeType":"88","messageId":"89","endLine":84,"endColumn":38},{"ruleId":"82","severity":1,"message":"90","line":3,"column":8,"nodeType":"84","messageId":"85","endLine":3,"endColumn":9},{"ruleId":"82","severity":1,"message":"91","line":18,"column":7,"nodeType":"84","messageId":"85","endLine":18,"endColumn":11},{"ruleId":"82","severity":1,"message":"92","line":32,"column":7,"nodeType":"84","messageId":"85","endLine":32,"endColumn":17},{"ruleId":"86","severity":1,"message":"87","line":96,"column":14,"nodeType":"88","messageId":"89","endLine":96,"endColumn":16},{"ruleId":"86","severity":1,"message":"87","line":105,"column":13,"nodeType":"88","messageId":"89","endLine":105,"endColumn":15},{"ruleId":"86","severity":1,"message":"87","line":126,"column":26,"nodeType":"88","messageId":"89","endLine":126,"endColumn":28},{"ruleId":"86","severity":1,"message":"87","line":162,"column":80,"nodeType":"88","messageId":"89","endLine":162,"endColumn":82},{"ruleId":"86","severity":1,"message":"93","line":162,"column":134,"nodeType":"88","messageId":"89","endLine":162,"endColumn":136},{"ruleId":"86","severity":1,"message":"87","line":279,"column":33,"nodeType":"88","messageId":"89","endLine":279,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":288,"column":33,"nodeType":"88","messageId":"89","endLine":288,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":302,"column":33,"nodeType":"88","messageId":"89","endLine":302,"endColumn":35},{"ruleId":"86","severity":1,"message":"87","line":309,"column":33,"nodeType":"88","messageId":"89","endLine":309,"endColumn":35},{"ruleId":"82","severity":1,"message":"94","line":2,"column":8,"nodeType":"84","messageId":"85","endLine":2,"endColumn":10},{"ruleId":"82","severity":1,"message":"95","line":2,"column":16,"nodeType":"84","messageId":"85","endLine":2,"endColumn":22},{"ruleId":"96","severity":1,"message":"97","line":101,"column":21,"nodeType":"98","endLine":101,"endColumn":98},{"ruleId":"96","severity":1,"message":"97","line":102,"column":21,"nodeType":"98","endLine":102,"endColumn":125},{"ruleId":"96","severity":1,"message":"97","line":106,"column":28,"nodeType":"98","endLine":106,"endColumn":80},{"ruleId":"96","severity":1,"message":"97","line":120,"column":35,"nodeType":"98","endLine":120,"endColumn":107},{"ruleId":"96","severity":1,"message":"97","line":121,"column":21,"nodeType":"98","endLine":121,"endColumn":96},{"ruleId":"96","severity":1,"message":"97","line":122,"column":21,"nodeType":"98","endLine":122,"endColumn":90},{"ruleId":"96","severity":1,"message":"97","line":124,"column":21,"nodeType":"98","endLine":124,"endColumn":92},{"ruleId":"96","severity":1,"message":"97","line":125,"column":21,"nodeType":"98","endLine":125,"endColumn":90},{"ruleId":"96","severity":1,"message":"97","line":129,"column":28,"nodeType":"98","endLine":129,"endColumn":77},{"ruleId":"82","severity":1,"message":"91","line":8,"column":5,"nodeType":"84","messageId":"85","endLine":8,"endColumn":9},{"ruleId":"96","severity":1,"message":"97","line":108,"column":19,"nodeType":"98","endLine":108,"endColumn":92},{"ruleId":"96","severity":1,"message":"97","line":112,"column":28,"nodeType":"98","endLine":112,"endColumn":52},{"ruleId":"96","severity":1,"message":"97","line":128,"column":19,"nodeType":"98","endLine":128,"endColumn":91},{"ruleId":"96","severity":1,"message":"97","line":129,"column":19,"nodeType":"98","endLine":129,"endColumn":123},{"ruleId":"96","severity":1,"message":"97","line":133,"column":26,"nodeType":"98","endLine":133,"endColumn":50},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is defined but never used.","'data' is assigned a value but never used.","'groundData' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'qs' is defined but never used.","'Avatar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]

