[{"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js":"1","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js":"2","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js":"3","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js":"4","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js":"5","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js":"6","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js":"7","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js":"8","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js":"9","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js":"10"},{"size":523,"mtime":1614166376315,"results":"11","hashOfConfig":"12"},{"size":622,"mtime":1620299572569,"results":"13","hashOfConfig":"12"},{"size":8306,"mtime":1618924701408,"results":"14","hashOfConfig":"12"},{"size":12367,"mtime":1620300905236,"results":"15","hashOfConfig":"12"},{"size":944,"mtime":1619009552986,"results":"16","hashOfConfig":"12"},{"size":1265,"mtime":1614768168228,"results":"17","hashOfConfig":"12"},{"size":2725,"mtime":1620303673562,"results":"18","hashOfConfig":"12"},{"size":7735,"mtime":1620300872184,"results":"19","hashOfConfig":"12"},{"size":3175,"mtime":1620300861979,"results":"20","hashOfConfig":"12"},{"size":2725,"mtime":1620303673562,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"nfz1d5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\index.js",[],["45","46"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\App.js",["47","48"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\login\\login.js",["49"],"import React, { Component } from 'react';\r\n\r\nimport { Input, Button, Tooltip, message } from 'antd';\r\nimport utils from '../utils'\r\nimport { UserOutlined, UnlockOutlined } from '@ant-design/icons';\r\nimport http from '../../server';\r\nimport './login.css';\r\n\r\nexport default class Login extends Component {\r\n  state = {\r\n    status: 'login',\r\n    registeruser: \"\",\r\n    registerpwd: \"\",\r\n    comfirmpwd: \"\",\r\n    loginuser: \"\",\r\n    loginpwd: \"\"\r\n  }\r\n\r\n  loginState = [0, 0]\r\n\r\n  registerState = [0, 0]\r\n\r\n  statusChage = (status,params) => {\r\n    let stateObj = {\r\n      status,\r\n      registeruser: \"\",\r\n      registerpwd: \"\",\r\n      comfirmpwd: \"\",\r\n      loginuser: \"\",\r\n      loginpwd: \"\",\r\n    }\r\n    if(params){\r\n      stateObj.loginuser = this.state.registeruser;\r\n      stateObj.loginpwd = this.state.registerpwd;\r\n    }\r\n    this.setState(stateObj)\r\n  }\r\n\r\n  userInput = (v, type) => {\r\n\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        this.setState({ registeruser: v.target.value })\r\n        break;\r\n      case \"registerpwd\":\r\n        this.setState({ registerpwd: v.target.value })\r\n        break;\r\n      case \"comfirmpwd\":\r\n        this.setState({ comfirmpwd: v.target.value })\r\n        break;\r\n      case \"loginuser\":\r\n        this.setState({ loginuser: v.target.value })\r\n        break;\r\n      case \"loginpwd\":\r\n        this.setState({ loginpwd: v.target.value })\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n  userBlur = (v, type) => {\r\n    switch (type) {\r\n      case \"registeruser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"registerpwd\":\r\n        if (utils.passwordAvailable(v.target.value)) {\r\n\r\n        } else {\r\n          message.info('密码格式不正确')\r\n        }\r\n        break;\r\n      case \"comfirmpwd\":\r\n        if (this.state.registerpwd == v.target.value) {\r\n\r\n        } else {\r\n          message.info('确认密码保持一致')\r\n        }\r\n        break;\r\n      case \"loginuser\":\r\n        if (utils.isPhoneOrEmail(v.target.value)) {\r\n          //手机号\r\n          if (!utils.isPhoneAvailable(v.target.value)) {\r\n            message.info('请输入正确的手机号');\r\n          }\r\n        } else {\r\n          //邮箱\r\n          if (!utils.isEmailAvailable(v.target.value)) {\r\n            message.info('请输入正确邮箱')\r\n          }\r\n        }\r\n        break;\r\n      case \"loginpwd\":\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  userLogin = () => {\r\n    http.post('login',{\r\n      \"em_ph\":this.state.loginuser,\r\n      \"passwd\":this.state.loginpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        if(data.data.data.id){\r\n          localStorage.setItem(\"user\",window.btoa(window.encodeURIComponent(JSON.stringify({id:data.data.data.id,name:data.data.data.username}))));\r\n          this.props.change(true);\r\n          //存\r\n        }\r\n        else{\r\n          message.error('登录失败')\r\n          return ;\r\n        }  \r\n      }\r\n      else{\r\n        message.error(\"请检查用户名、密码\");\r\n      }\r\n    })\r\n    return true\r\n  }\r\n\r\n  userRegester = () => {\r\n    http.post('register',{\r\n      \"em_ph\":this.state.registeruser,\r\n      \"passwd\":this.state.registerpwd\r\n    }).then((data)=>{\r\n      if(data.data.success){\r\n        // this.props.change(true);\r\n        this.statusChage('login',{fromPage:'reggister'});\r\n      } else {\r\n        message.error(\"注册失败\");\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.state.status === \"login\"\r\n        ? <div className=\"loginPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户登录</h1>\r\n            </div>\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入邮箱/手机号\"\r\n              value={this.state.loginuser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginuser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginuser');\r\n              }}\r\n              prefix={<UserOutlined />} />\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              placeholder=\"请输入密码\"\r\n              value={this.state.loginpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'loginpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'loginpwd');\r\n              }}\r\n              prefix={<UnlockOutlined />} />\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('register') }}>\r\n                  还没账户注册一个？\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                {/* <Button className=\"register\" type=\"default\" shape=\"round\">注册</Button> */}\r\n                <Button className=\"login\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userLogin() }}>\r\n                  登录\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        : <div className=\"registerPage\">\r\n          <div className=\"userContent\">\r\n            <div className='loginTitle'>\r\n              <h1>用户注册</h1>\r\n            </div>\r\n\r\n            <Input className='user'\r\n              size=\"large\"\r\n              placeholder=\"请输入用户名/手机号\"\r\n              prefix={<UserOutlined />}\r\n              value={this.state.registeruser}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'registeruser');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'registeruser');\r\n              }}\r\n            />\r\n\r\n            <Tooltip\r\n              trigger={['focus']}\r\n              title={`1、密码必须由数字、字符、特殊字符三种中的两种组成;\r\n              2、密码长度不能少于8个字符;`}\r\n              placement=\"right\"\r\n              overlayClassName=\"numeric-input\"\r\n            >\r\n              <Input.Password className=\"password\"\r\n                size=\"large\"\r\n                visibilityToggle={false}\r\n                placeholder=\"请输入密码\"\r\n                value={this.state.registerpwd}\r\n                onChange={(v) => {\r\n                  this.userInput(v, 'registerpwd');\r\n                }}\r\n                onBlur={(v) => {\r\n                  this.userBlur(v, 'registerpwd');\r\n                }}\r\n                prefix={<UnlockOutlined />}\r\n              />\r\n            </Tooltip>\r\n\r\n            <Input.Password className=\"password\"\r\n              size=\"large\"\r\n              visibilityToggle={false}\r\n              value={this.state.comfirmpwd}\r\n              onChange={(v) => {\r\n                this.userInput(v, 'comfirmpwd');\r\n              }}\r\n              onBlur={(v) => {\r\n                this.userBlur(v, 'comfirmpwd');\r\n              }}\r\n              placeholder=\"请再次确认密码\"\r\n              prefix={<UnlockOutlined />}\r\n            />\r\n\r\n            <div className=\"loginFooter\">\r\n              <div className=\"left\">\r\n                <Button type=\"link\" onClick={() => { this.statusChage('login') }}>\r\n                  有账户直接登录！\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button className=\"cancle\"\r\n                  type=\"default\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.statusChage('login') }}>\r\n                  取消\r\n                  </Button>\r\n                <Button className=\"register\"\r\n                  type=\"primary\"\r\n                  shape=\"round\"\r\n                  onClick={() => { this.userRegester() }}>\r\n                  注册\r\n                  </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\body\\body.js",["50","51","52","53","54","55","56","57","58","59","60","61"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\server.js",["62"],"import axios from 'axios';\r\nimport qs from 'qs';\r\n\r\nlet root = 'http://xpmxia.cn.utools.club/';\r\nlet http = {\r\n  post: \"\",\r\n  get: \"\",\r\n  delete:\"\"\r\n}\r\nhttp.post = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.post(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.get = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.get(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\nhttp.delete = function (api, data) {\r\n  let url = root+api;\r\n  let params = data;\r\n  return new Promise((resolve, reject) => {\r\n    axios.delete(url, params).then((res) => {\r\n      resolve(res);\r\n    }).catch(error => {\r\n      reject(error);\r\n    })\r\n  })\r\n}\r\n\r\nexport default http;","F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\utils\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\MySpace\\index.js",[],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\editor\\index.js",["63","64","65","66"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\note\\index.js",["67","68","69","70","71","72","73","74","75"],"F:\\桌面\\论文\\noteTaking\\src\\web\\src\\components\\myspace\\index.js",["76","77","78","79","80","81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":20,"nodeType":"89","messageId":"90","endLine":2,"endColumn":29},{"ruleId":"87","severity":1,"message":"91","line":7,"column":9,"nodeType":"89","messageId":"90","endLine":7,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":84,"column":36,"nodeType":"94","messageId":"95","endLine":84,"endColumn":38},{"ruleId":"87","severity":1,"message":"96","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":9},{"ruleId":"87","severity":1,"message":"97","line":18,"column":7,"nodeType":"89","messageId":"90","endLine":18,"endColumn":11},{"ruleId":"87","severity":1,"message":"98","line":32,"column":7,"nodeType":"89","messageId":"90","endLine":32,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":96,"column":14,"nodeType":"94","messageId":"95","endLine":96,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":105,"column":13,"nodeType":"94","messageId":"95","endLine":105,"endColumn":15},{"ruleId":"92","severity":1,"message":"93","line":125,"column":26,"nodeType":"94","messageId":"95","endLine":125,"endColumn":28},{"ruleId":"92","severity":1,"message":"93","line":161,"column":80,"nodeType":"94","messageId":"95","endLine":161,"endColumn":82},{"ruleId":"92","severity":1,"message":"99","line":161,"column":134,"nodeType":"94","messageId":"95","endLine":161,"endColumn":136},{"ruleId":"92","severity":1,"message":"93","line":277,"column":33,"nodeType":"94","messageId":"95","endLine":277,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":286,"column":33,"nodeType":"94","messageId":"95","endLine":286,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":300,"column":33,"nodeType":"94","messageId":"95","endLine":300,"endColumn":35},{"ruleId":"92","severity":1,"message":"93","line":307,"column":33,"nodeType":"94","messageId":"95","endLine":307,"endColumn":35},{"ruleId":"87","severity":1,"message":"100","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":10},{"ruleId":"92","severity":1,"message":"93","line":114,"column":12,"nodeType":"94","messageId":"95","endLine":114,"endColumn":14},{"ruleId":"92","severity":1,"message":"99","line":151,"column":40,"nodeType":"94","messageId":"95","endLine":151,"endColumn":42},{"ruleId":"92","severity":1,"message":"99","line":157,"column":40,"nodeType":"94","messageId":"95","endLine":157,"endColumn":42},{"ruleId":"92","severity":1,"message":"93","line":158,"column":39,"nodeType":"94","messageId":"95","endLine":158,"endColumn":41},{"ruleId":"87","severity":1,"message":"101","line":2,"column":16,"nodeType":"89","messageId":"90","endLine":2,"endColumn":22},{"ruleId":"87","severity":1,"message":"102","line":2,"column":24,"nodeType":"89","messageId":"90","endLine":2,"endColumn":31},{"ruleId":"103","severity":1,"message":"104","line":68,"column":21,"nodeType":"105","endLine":68,"endColumn":98},{"ruleId":"103","severity":1,"message":"104","line":69,"column":21,"nodeType":"105","endLine":69,"endColumn":125},{"ruleId":"103","severity":1,"message":"104","line":73,"column":28,"nodeType":"105","endLine":73,"endColumn":80},{"ruleId":"103","severity":1,"message":"104","line":85,"column":29,"nodeType":"105","endLine":85,"endColumn":80},{"ruleId":"103","severity":1,"message":"104","line":86,"column":19,"nodeType":"105","endLine":86,"endColumn":94},{"ruleId":"103","severity":1,"message":"104","line":87,"column":19,"nodeType":"105","endLine":87,"endColumn":88},{"ruleId":"103","severity":1,"message":"104","line":92,"column":28,"nodeType":"105","endLine":92,"endColumn":77},{"ruleId":"87","severity":1,"message":"106","line":44,"column":10,"nodeType":"89","messageId":"90","endLine":44,"endColumn":19},{"ruleId":"87","severity":1,"message":"107","line":44,"column":21,"nodeType":"89","messageId":"90","endLine":44,"endColumn":28},{"ruleId":"103","severity":1,"message":"104","line":59,"column":19,"nodeType":"105","endLine":59,"endColumn":92},{"ruleId":"103","severity":1,"message":"104","line":63,"column":28,"nodeType":"105","endLine":63,"endColumn":52},{"ruleId":"103","severity":1,"message":"104","line":79,"column":19,"nodeType":"105","endLine":79,"endColumn":87},{"ruleId":"103","severity":1,"message":"104","line":80,"column":19,"nodeType":"105","endLine":80,"endColumn":121},{"ruleId":"103","severity":1,"message":"104","line":84,"column":26,"nodeType":"105","endLine":84,"endColumn":50},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'state' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is defined but never used.","'data' is assigned a value but never used.","'groundData' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'qs' is defined but never used.","'Avatar' is defined but never used.","'message' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'myapprove' is assigned a value but never used.","'approve' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]